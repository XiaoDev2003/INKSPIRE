<?php
// üìÅ backend/controllers/ItemController.php

require_once __DIR__ . '/../config/db.php';
require_once __DIR__ . '/../models/Item.php';
require_once __DIR__ . '/../utils/helpers.php';

$db = new Database();
$conn = $db->getConnection();
$itemModel = new Item($conn);

$method = $_SERVER['REQUEST_METHOD'];

switch ($method) {
    case 'GET':
        if (isset($_GET['item_id'])) {
            $item = $itemModel->getById($_GET['item_id']);
            jsonResponse($item ?: ['error' => 'Kh√¥ng t√¨m th·∫•y'], $item ? 200 : 404);
        } else {
            $items = $itemModel->getAll();
            jsonResponse($items);
        }
        break;

    case 'POST':
        $data = json_decode(file_get_contents("php://input"), true);
        if (!isset($data['item_name'], $data['category_id'], $data['script_type'], $data['author_id'])) {
            jsonResponse(['error' => 'Thi·∫øu th√¥ng tin b·∫Øt bu·ªôc'], 400);
        }
        $result = $itemModel->create($data);
        jsonResponse($result ? ['message' => 'Th√™m item th√†nh c√¥ng'] : ['error' => 'Th√™m th·∫•t b·∫°i'], $result ? 200 : 500);
        break;

    case 'PUT':
        parse_str(file_get_contents("php://input"), $data);
        if (!isset($data['item_id'])) {
            jsonResponse(['error' => 'Thi·∫øu item_id'], 400);
        }
        $result = $itemModel->update($data);
        jsonResponse($result ? ['message' => 'C·∫≠p nh·∫≠t th√†nh c√¥ng'] : ['error' => 'C·∫≠p nh·∫≠t th·∫•t b·∫°i'], $result ? 200 : 500);
        break;

    case 'DELETE':
        parse_str(file_get_contents("php://input"), $data);
        if (!isset($data['item_id'])) {
            jsonResponse(['error' => 'Thi·∫øu item_id'], 400);
        }
        $result = $itemModel->delete($data['item_id']);
        jsonResponse($result ? ['message' => 'X√≥a th√†nh c√¥ng'] : ['error' => 'X√≥a th·∫•t b·∫°i'], $result ? 200 : 500);
        break;

    default:
        jsonResponse(['error' => 'Ph∆∞∆°ng th·ª©c kh√¥ng h·ªó tr·ª£'], 405);
}
